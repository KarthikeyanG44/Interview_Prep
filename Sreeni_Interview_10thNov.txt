# Dictionary - know all the API - how to check if element exists in the dictionary,
# how to initialize a array
# how to replace a string at a particular index
# how to delete an element by index
# how to check if two strings are anagrams
# How do you iterate items in a dictionary
# How do you iterate a array in reverse order
# How do you sort a array of tuples based on key / value
# priority queue / heap


# what is the difference between set and a list
# how to reverse a string



# Given any two lists, each containing key-value pairs,
# generate a new list that has actions needed to convert first list
# into the second one. 

# Example A is  and
# B is [[‘b’, 4], [‘c’, 10]], to convert A into B

# we need [[‘a’, ‘delete’], [‘b’, ‘update’, 4], [‘c’, ‘create’, 10]].
# Order of actions doesn’t matter.

def get_actions_to_convert_list(A, B):
    dict_A = {}
    dict_B = {}
    actions = []

    key_list = []


#     Dictionary - know all the API - how to check if element exists in the dictionary,
# how to initialize a array
# how to replace a string at a particular index
# how to delete an element by index
# how to check if two strings are anagrams
# How do you iterate items in a dictionary
# How do you iterate a array in reverse order
# How do you sort a array of tuples based on key / value
# priority queue / heap

# what is the difference between set and a list
# how to reverse a string

    for key_b, value_b in B:
        dict_B[key_b] = value_b
        key_list.append(key_b)

    for key_a, value_a in A:
        dict_A[key_a] = value_a
        if not key_a in key_list:
            key_list.append(key_a)

    for check_key in key_list:
        if (check_key in dict_A and not check_key in dict_B):
            actions.append([check_key,'delete'])
        elif (check_key in dict_A and check_key in dict_B):
            if (dict_A[check_key] != dict_B[check_key]):
                actions.append([check_key,'update',dict_B[check_key]])
            else:
                actions.append([])
        elif (check_key not in dict_A and check_key in dict_B):
            actions.append([check_key,'create',dict_B[check_key]])
            
    return actions